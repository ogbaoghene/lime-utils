/*--------------------------------------------------------------
  $BASE
--------------------------------------------------------------*/

/*  CSS Device Adaptation*/
@-ms-viewport {
  width: device-width;
}

@media print {
  /* Ensures that no images reach the outer bounds of the normal page view */
  img {
    max-width: 100% !important;
  }

  /* Prevents widows and orphans on heading and paragraph tags */
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
}

html {
  font-size: 100%; /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll; /* Keeps page centered in all browsers regardless of content height */
}

/* Transitions only after page load, requires attendant JS */
.preload * {
  transition: none !important;
}

* {
  margin: 0;
  padding: 0;

  vertical-align: baseline;

  border: 0;
  outline: 0;
}


/* Apply a natural box layout model to all elements; see http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */ 
*,
*:before,
*:after {
  box-sizing: border-box;
}

/* Fix image scaling in IE7 */
img {
  -ms-interpolation-mode: bicubic;
}

/* Remove the tap highlight color on touchscreens */
a:link {
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-tap-highlight-color: transparent; // For some Androids
}

/* Responsive images */
img,
object[type="image/svg+xml"] {
  max-width: 100%;
}

fieldset {
  margin: 0;
  padding: 0;

  border: none;
}


@import 'modules/variables';

// Custom Variables
$type: (
  heading: $black,
  body: $normal,
  bold: $bold,
);

$gray94: #eee;
$lime-green: #32cd32;
$dark-lime-green: #2ebd2e;
$lemon-lime: #e3ff00;
$black-bean: #030c03;
$gray98: #fafafa;

$text-color: (
  body: $gray20,
  link: $gray20,
  active-link: $true-black,
  border: $gray94,
  alt-border: $lemon-lime,
  alt: $white,
  off: $gray40,
);

$btn-color: (
  bg: $lime-green,
  color: $white,
  bg-hover: $dark-lime-green,
  color-hover: $lemon-lime,
);

$svg-color: (
  fill: $lemon-lime,
  stroke: $lemon-lime,
);

$bg-color: (
  feature: $gray98,
  footer: $black-bean,
  section: $white,
  hero: $true-black,
);

/* Lime %placeholders */
@import 'modules/lime';


/*--------------------------------------------------------------
  $ATOMS
--------------------------------------------------------------*/

// Font-family
@include lime-font(montserrat, 'fonts/montserrat-black-webfont', $weight: 800);
@include lime-font(montserrat, 'fonts/montserrat-semibold-webfont', $weight: 700);
@include lime-font(montserrat, 'fonts/montserrat-ultralight-webfont', $weight: 400);

$pri-font: 'montserrat', Arial, sans-serif;

$font: (
  body: $pri-font,
);

@include loop($font, font-family, $namespace: font);

body {
  @extend %font-body;
  @extend %line-height-normal;

  color: map-get($text-color, body);
}

* + * {
  margin-top: $doc-baseline;
}

h1, h2, h3, h4, h5, h6 {  
  > a {
    color: inherit;
  }
}

h3, h4, h5, h6 {
  & + * {
    @extend %margin-reset;
  }
}

.giga {
  @extend %giga;
}

.mega {
  @extend %mega;
}

.kilo {
  @extend %kilo;
}

h1,
.alpha {
  @extend %alpha;
}

h2,
.beta {
  @extend %beta;
}

h3,
.gamma {
  @extend %gamma;
}

h4,
.delta {
  @extend %delta;
}

h5,
.epsilon {
  @extend %epsilon;
}

h6,
.zeta {
  @extend %zeta;
}

small,
.milli {
  @extend %milli;
}

* + small,
* + .milli {
  margin-top: $doc-baseline / 2;
}

a {
  &:link, &:visited {
    @extend %text-decoration-none;
    @extend %outline-none;
    @extend %transit-fade;

    color: map-get($text-color, link);

    @include lime-border($position: bottom, $color: transparent);
  }
    
  &:hover {
    border-color: map-get($text-color, link);
  }

  &:active {
    border-color: map-get($text-color, active-link);
  }

  &.case {
    @extend %do-inline;
    @extend %position-relative;
    
    @include lime-border(0, $position: bottom);
    @include lime-pseudo(fore) {
      @extend %position-absolute;
      @extend %z-depth-0;

      @include lime-chain(top right bottom left, 0);
    };

    > * {
      @extend %align-btm;
      @extend %z-depth-1;
    }
  }
}

button,
a[class*="btns"] {
  @extend %align-btm;
  @extend %do-inline;
  @extend %white-space-nowrap;
  @extend %epsilon;
  @extend %padding-default;
  @extend %transit-fade;
  @extend %text-center;
  @extend %type-bold;
  @extend %radii-xh;
  @extend %shadow-depth-2;

  line-height: $doc-line-height - .25rem;

  user-select: none;

  color: map-get($btn-color, color);
  background-color: map-get($btn-color, bg);

  @include lime-border(2px, $color: transparent);
  
  &:hover {
    @extend %text-decoration-none;

    color: map-get($btn-color, color-hover);
    background-color: map-get($btn-color, bg-hover);
    border-color: transparent;
  }

  &:active {
    @extend %shadow-depth-1;
  }
}

ul,
ol {
  @extend %list-inside;

  li + li {
    @extend %margin-reset;
  }
}

.half-rule {
  @extend %margin-center;

  width: px-to-rem(100px);

  @include lime-border($position: top, $color: map-get($text-color, border));

  &,
  & + * {
    margin-top: $doc-baseline * 2;
  }
}


/*--------------------------------------------------------------
  $LAYOUT
--------------------------------------------------------------*/

section {
  @extend %position-relative;
  @extend %do-flex;
  @extend %width-min;

  flex-direction: column;

  min-height: 100vh;

  justify-content: center;
  align-items: center;

  @include lime-chain(padding-top padding-bottom, $doc-baseline * 2);

  h1 {
    @extend %type-heading;
    @extend %text-transform-upper;
  }

  h2, h3 {
    @extend %type-body;
  }

  p {
    @extend %margin-center;

    max-width: px-to-rem(map-get($breakpoints, goldilocks));
  }

  * + & {
    @extend %margin-reset;
  }
}

.goldi {
  @extend %margin-center;
  @extend %overflow-hidden;

  max-width: px-to-rem(map-get($breakpoints, goldilocks));

  @include lime-chain(padding-right padding-left, $doc-gutter);
}

.cta {
  @extend %position-absolute;
  @extend %text-center;

  bottom: $doc-baseline;

  @include lime-chain(left right, 0);

  &-prompt {
    @extend %transit-fade;
    @extend %visibility-hidden;

    opacity: 0;
  }

  a:hover ~ &-prompt {
    @extend %visibility-visible;

    opacity: 1;
  }
}

.hero {
  color: map-get($text-color, alt);
  background: map-get($bg-color, hero) url('imgs/hero.jpg') center no-repeat;
  background-size: cover;

  padding-bottom: $doc-baseline * 5;

  p + ul {
    @extend %margin-reset;
  }

  blockquote {
    @include lime-border(0, $position: right);
  }

  .aside {
    @extend %milli;

    color: transparentize(map-get($text-color, alt), .4);
  }

  @include lime-break(map-get($breakpoints, baby-bear), $query: min-width) {
    .flex-wrap {
      justify-content: space-between;
      align-content: center;
    }

    .site-title.flex-item {
      flex-basis: 100%;
    }

    .aside.flex-item {
      flex-basis: 25%;
      text-align: map-get($direction, end);
      text-align: end;
    }

    blockquote {
      @include lime-border($doc-gutter / 2, $position: right, $color: map-get($text-color, alt-border));

      padding-right: $doc-gutter;
    }
  }
}

#do-more,
#painless {
  background-color: map-get($bg-color, section);

  .aside object {
    @extend %do-show;
    @extend %margin-auto;
    @extend %transit-move;

    transform: translate(30%);

    @include lime-break(map-get($breakpoints, goldilocks), $query: min-width) {
      transform: none;
    }
  }

  @include lime-break(map-get($breakpoints, goldilocks), $query: min-width, $break2: map-get($breakpoints, baby-bear), $query2: max-width) {
    text-align: center;
  }
}

@include lime-break(map-get($breakpoints, baby-bear), $query: min-width) {
  #do-more {
    padding-bottom: $doc-baseline * 7;
  }
}

#painless {
  padding-bottom: $doc-baseline * 7;

  @include lime-break($break: map-get($breakpoints, baby-bear), $query: max-width) {
    @include lime-border($position: top, $color: map-get($text-color, border));
  }
}

.features {
  @extend %text-center;

  background-color: map-get($bg-color, feature);

  padding-bottom: $doc-baseline * 4;

  @include lime-border($position: top, $color: map-get($text-color, border));
}

.feature {
  @include lime-break(map-get($breakpoints, wee), $query: min-width) {
    padding-left: px-to-rem(107px);

    background-image: url('imgs/features.png');
    background-repeat: no-repeat;
    background-position: 0 -97px;
    background-size: 91px 285px;

    &:first-of-type {
      background-position-y: 0;
    }

    &:nth-of-type(3) {
      background-position-y: -194px;
    }

    .svg & {
      background-image: url('imgs/features.svg');
    }
  }

  @include lime-break(map-get($breakpoints, goldilocks), $query: min-width) {
    margin-bottom: $doc-baseline;
    padding-top: px-to-rem(96px);
    padding-left: 0;

    background-position-x: center;

    > * {
      background-color: map-get($bg-color, feature);
    }

    &-list.flex-wrap {
      display: flex;

      align-items: flex-start;
      flex-wrap: wrap;

      @include lime-chain(margin-right margin-left, -$doc-gutter);
      @include lime-chain(padding-right padding-left, 0);
    }

    &.flex-item {
      flex-basis: 50%;

      @include lime-chain(padding-right padding-left, $doc-gutter);
    }

    * + &.flex-item {
      margin-top: 0;
    }
  }

  @include lime-break(map-get($breakpoints, baby-bear), $query: min-width) {
    &-list.flex-wrap {
      flex-wrap: nowrap;
    }

    &.flex-item {
      flex-basis: 25%;
    }
  }
}

@include lime-break(map-get($breakpoints, wee), $query: min-width, $break2: map-get($breakpoints, goldilocks), $query2: max-width) {
  .feature-list {
    text-align: map-get($direction, start);
    text-align: start;
  }
}

@include lime-break(map-get($breakpoints, baby-bear), $query: min-width) {
  .hero,
  #do-more,
  #painless {
    @include lime-chain(padding-right padding-left, $doc-gutter);
  }

  .goldi {
    max-width: px-to-rem(map-get($breakpoints, middle-sized));
  }
  
  .flex-wrap {
    display: flex;

    align-items: center;
    flex-wrap: wrap;

    @include lime-chain(margin-right margin-left, -$doc-gutter);
    @include lime-chain(padding-right padding-left, 0);
  }

  .flex-item {
    flex-basis: 50%;

    @include lime-chain(padding-right padding-left, $doc-gutter);
  }

  * + .flex-item {
    margin-top: 0;
  }
}

footer {
  @extend %text-center;
  @extend %padding-default;
  @extend %position-relative;
  @extend %width-min;

  background-color: map-get($bg-color, footer);

  @include lime-chain(padding-top padding-bottom, $doc-baseline * 3);

  &,
  a:link, a:visited {
    color: map-get($text-color, off);
  }

  * + & {
    @extend %margin-reset;
  }

  a:hover, a:active {
    color: map-get($text-color, alt);
    border-color: map-get($text-color, alt);
  }

  nav + .copy {
   @extend %margin-reset;
  }

  .copy {
    @extend %milli;
  }
}

/*--------------------------------------------------------------
  $BEHAVIOUR
--------------------------------------------------------------*/

.scroll-down {
  * {
    @extend %transit-transform;
  }

  path {
    fill: map-get($svg-color, fill);
    stroke-width: 0;
    stroke: map-get($svg-color, stroke);
  }
}

a:hover .scroll-down path:first-of-type {
  stroke-width: 1;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.waypoint,
.sticky-wrapper {
  @extend %margin-reset;
}

.waypoint {
  height: 0;
}

.feature {
  @extend %animated;
  @extend %transit-enter;

  &:nth-of-type(2) {
    animation-delay: .1s;
  }

  &:nth-of-type(3) {
    animation-delay: .3s;
  }

  &:last-of-type {
    animation-delay: .2s;
  }
}

@include lime-break(map-get($breakpoints, baby-bear), $query: min-width) {
  .stuck {
    position: fixed;

    @include lime-chain(top right left, 0);
  }

  #do-more,
  #painless {
    will-change: position;
  }
  
  #do-more.stuck,  
  .features,
  footer {
    z-index: 2;
  }

  #painless.stuck {
    z-index: 1;
  }

  .features {
    margin-top: $doc-baseline * 20;
  }

  .cssanimations .feature {
    opacity: 0;
  }

  .fade-out {
    visibility: hidden;

    transition: .3s ease-out;

    opacity: 0;
  }

  .fadeInUp {
    animation-name: fadeInUp;
  }
}
