// Positioning
//
// Position an element.
// 
// Parameters:
// ```scss
// $position  : Either relative, absolute, or fixed
// $edge      : Top, right, bottom, and left. Defaults to 'top: 0'
// ```
// 
// Usage:
// ```scss
// .example {
//   @include positioning(absolute, $edge: 0 0);
// }
//
// .example-2 {
//   @include positioning(absolute, $edge: null 0 null 0);
// }
// ```
//
// **Requires** : _layoutProperties
//
// _**Note** : Will not work within a media query. Escape edge values using `null`._
//
// Styleguide 2.8

@mixin positioning($position, $edge: 0) {
  @extend %position-#{$position};
  
  @if length($edge) != 1 {
    @if length($edge) == 2 {
      $top: nth($edge, 1);
      $right: nth($edge, 2);
      
      @if $top != null {
        top: $top;
      }
      @if $right != null {
        #{map-get($direction, end)}: $right;
      }
    } @else if length($edge) == 3 {
      $top: nth($edge, 1);
      $right: nth($edge, 2);
      $bottom: nth($edge, 3);
      
      @if $top != null {
        top: $top;
      }
      @if $right != null {
        #{map-get($direction, end)}: $right;
      }
      @if $bottom != null {
        bottom: $bottom;
      }
    } @else if length($edge) == 4 {
      $top: nth($edge, 1);
      $right: nth($edge, 2);
      $bottom: nth($edge, 3);
      $left: nth($edge, 4);
      
      @if $top != null {
        top: $top;
      }
      @if $right != null {
        #{map-get($direction, end)}: $right;
      }
      @if $bottom != null {
        bottom: $bottom;
      }
      @if $left != null {
        #{map-get($direction, start)}: $left;
      }
    } @else {
      @warn 'Edge values are out of bounds. Properties omitted.';
    }
  } @else {
    top: $edge;
  }
}

