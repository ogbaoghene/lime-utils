// Fixed Ratio
//
// Container with fixed aspect ratios.
//
// Parameters:
// ```scss
// $ratio : Aspect ratio
// $type : wrap or crop. Predefined as default
// ```
//
// Usage:
// ```scss
// .img-cover {
//   @include fixed-ratio($ratio: 16/9);
// }

// .img-crop {
//   @include fixed-ratio($ratio: 4/3, $type: crop);
// }

// .img-wrap {
//   @include fixed-ratio($ratio: 1.618/1, $type: wrap);
// }
// ```
// 
// **Requires** : _layoutProperties, _chainProperties, _calcFallback, _pseudo
//
// Styleguide 2.16

@mixin fixed-ratio($ratio, $type: default) {
  @extend %overflow-hidden;
  @extend %position-relative;
  
  @include pseudo($element: before, $display: show) {
    height: 0;
    
    @include calc($property: padding-top, $expression: "1 / #{$ratio} * 100%", $default: #{(1 / $ratio) * 100%});
  }
  
  @if $type == wrap {
    // centered child element
    &__wrap {
      @extend %position-absolute;
    
      @include chain(top right bottom left, 0);
      @include chain(max-width max-height, 100%);
    }
  } @else if $type == crop {
    // cropped child element
    &__wrap {
      @extend %position-absolute;
    
      @include chain(top right bottom left, -9999em);
      @include chain(max-width max-height, none);
      
      .flexbox & {
        transform: translate(-50%, -50%);
        
        @include chain(top left, 50%);
        @include chain(right bottom, auto);
      }
    }
  } @else {
    // background-image
    background: {
      position: 50%;
      repeat: no-repeat;
      size: cover;
    }
  }
}

