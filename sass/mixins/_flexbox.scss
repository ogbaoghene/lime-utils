// Flexbox
//
// Define behaviour for flexbox containers and items.
// 
// Parameters:
// ```scss
// $flex-direction : Establishes the main-axis, row, row-reverse, column, and column-reverse. Predefined as row
// $flex-wrap : Specify if flex items will all try to fit onto one line or allow the items to wrap as needed, nowrap, wrap, and wrap-reverse. Predefined as nowrap
// $justify-content : Defines the alignment along the main axis, flex-start, flex-end, center, space-between, and space-around. Predefined as flex-start
// $align-items : Defines the default behaviour for how flex items are laid out along the cross axis, flex-start, flex-end, center, baseline, and stretch. Predefined as flex-start
// $align-content: Aligns the lines in a flex container when there is extra space in the cross-axis, flex-start, flex-end, center, space-between, space-around, and stretch. Predefined as flex-start
//
// $order : Control the order in which flex-items appear. Predefined as null
// $flex-grow : Defines the ability for a flex item to grow. Predefined as 0
// $flex-shrink: Defines the ability for a flex item to shrink. Predefined as 1
// $flex-basis: Defines the default size of an element. Predefined as auto
// $align-self: Override the default alignment for individual flex items. Predefined as null
// ```
// 
// Usage:
// ```scss
// .example {
//   @include flexbox($justify-content: space-around, $align-items: stretch);
//   
//   .test-child {
//     @include flexbox-child($flex-grow: 1, $flex-shrink: 1, $align-self: stretch);
//   }
//   
//   .test-child-2 {
//     @include flexbox-child($order: 3, $flex-shrink: 0);
//   }
// }
// ```
//
// **Requires** : _layoutproperties
//
// Styleguide 2.13

@mixin flexbox($flex-direction: row, $flex-wrap: nowrap, $justify-content: flex-start, $align-items: flex-start, $align-content: flex-start) {
  @extend %do-flex;
  
  @if $flex-direction != row or $flex-wrap != nowrap {
    flex-flow: $flex-direction $flex-wrap;
  }
  @if $justify-content != flex-start {
    justify-content: $justify-content;
  }
  @if $align-items != flex-start {
    align-items: $align-items;
  }
  @if $align-content != flex-start {
    align-content: $align-content;
  }
}

@mixin flexbox-child($order: null, $flex-grow: 0, $flex-shrink: 1, $flex-basis: auto, $align-self: null) {
  @if $order != null {
    order: $order;
  }
  @if $flex-grow != 0 or $flex-shrink != 1 or $flex-basis != auto {
    flex: $flex-grow $flex-shrink $flex-basis;
  }
  @if $align-self != null {
    align-self: $align-self;
  }
}

