// Pseudo
//
// Shorthand for writing &:before, &:after.
//
// Parameters:
// ```scss
// $element : Pseudo element, before, after, or both
// $content : Insert generated content. Optional
// $display : Extend display property placeholder. Optional
// $position : Extend position property placeholder. Optional
// ```
//
// Usage:
// ```scss
// .test {
//   @include pseudo($element: both, $display: show, $position: absolute) {
//     height: 20px;
//   }
// }
//
// .test2 {
//   @include pseudo($element: after,$content: 'GO!') {
//     clear: both;
//   }
// }
// ```
// 
// **Requires** : _layoutProperties
// 
// Adapted from [Team Treehouse](http://blog.teamtreehouse.com/)
//
// Styleguide 2.15

@mixin pseudo($element, $content: null, $display: null, $position: null) {
  @if $element == before or $element == after {
    @if $content != null {
      &:#{$element} {
        content: $content;
        @content;
      }
    } @else {
      &:#{$element} {
        content: '';
        @content;
      }
    }
    
    @if $display != null {
      &:#{$element} {
        @extend %do-#{$display};
      }
    }
    
    @if $position != null {
      &:#{$element} {
        @extend %position-#{$position};
      }
    }
  } @else if $element == both {
    @if $content != null {
      &:before,
      &:after {
        content: $content;
        @content;
      }
    } @else {
      &:before,
      &:after {
        content: '';
        @content;
      }
    }
    
    @if $display != null {
      &:#{$element} {
        @extend %do-#{$display};
      }
    }
    
    @if $position != null {
      &:#{$element} {
        @extend %position-#{$position};
      }
    }
  } @else {
    @warn '`#{$element}` is not a valid pseudo-element.';
  }
}

